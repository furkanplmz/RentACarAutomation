<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xtraTabPage1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>